{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTabId","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"yKAUaA,EAAwB,SAAC,GAI/B,IAAD,IAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,GAAe,UAAAH,EAClBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YADL,eACqBK,KAAMN,EAAK,GAAGM,GAExD,OACE,gCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWE,IAAW,CACpB,YAAaN,IAAiBE,EAAIC,KAHtC,SAME,mBACEI,KAAI,WAAML,EAAIC,IACdK,QAAS,WACHN,EAAIC,KAAOL,GACbC,EAAcG,IAJpB,SAQGA,EAAIO,SAbFP,EAAIC,WAoBjB,qBAAKC,UAAU,QAAQ,UAAQ,cAA/B,mBACGP,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4CY,cCxCxCb,G,YAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,iBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASf,EAAK,IAApD,mBAAOgB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBS,EAAYJ,SAElC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAee,EAAYV,GAC3BJ,cAAee,QCnBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.81705eee.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected(tab: Tab): void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTabId = tabs\n    .find(tab => tab.id === selectedTabId)?.id || tabs[0].id;\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({\n                'is-active': currentTabId === tab.id,\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tad is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}